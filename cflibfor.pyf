!    -*- f90 -*-
! Note: the context of this file is case sensitive.


python module cflibfor ! in 
    interface  ! in :cflibfor
        module mod ! in :cflibfor:cflibfor.f90
            !use cosmolib
            real(kind=8) :: deg2rad
            real(kind=8) :: rad2deg

!==========================================================================================
!   AUXILIARY ROUTINES
!==========================================================================================

            subroutine bootstrap(npt,nboot,fixseed,w) ! in :cflibfor:cflibfor.f90:mod
                integer :: npt,nboot,fixseed
                real(kind=4) intent(out),dimension(nboot,npt) :: w
            end subroutine bootstrap

            subroutine finishMPI() ! in :cflibfor:cflibfor.f90:mod
            end subroutine finishMPI
            
!==========================================================================================
!   COUNTING ROUTINES - 3D SPHERICAL (projected)
!==========================================================================================

            subroutine skll3d(mxh1,mxh2,mxh3,npt,ra,dec,dc,sbound,sepv,nsepv,sk,ll) ! in :cflibfor:cflibfor.f90:mod
                integer :: mxh1,mxh2,mxh3,npt,nsepv
                real(kind=8) dimension(npt),depend(npt) :: ra,dec
                real(kind=8) dimension(npt),depend(npt) :: dc
                real(kind=8) :: sbound(6)
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                integer intent(out),dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer intent(out),dimension(npt),depend(npt) :: ll
            end subroutine skll3d
            
            subroutine rppi_A(nt,npt,dec,dc,x,y,z,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,cntid,logf,sk,ll,aapvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: aapvtot
            end subroutine rppi_A

            subroutine rppi_A_wg(nt,npt,dec,dc,wei,x,y,z,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,wfib,cntid,logf,sk,ll,aapvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,wfib
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                real(kind=4) dimension(npt),depend(npt) :: wei
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: aapvtot
            end subroutine rppi_A_wg

            subroutine rppi_Ab(nt,npt,dec,dc,x,y,z,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,nbts,bseed,cntid,logf,sk,ll,aapvtot,baapvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: aapvtot
                real(kind=8) intent(out),dimension(nbts,nsepp,nsepv),depend(nbts,nsepp,nsepv) :: baapvtot
            end subroutine rppi_Ab

            subroutine rppi_Ab_wg(nt,npt,dec,dc,wei,x,y,z,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,nbts,bseed,wfib,cntid,logf,sk,ll,aapvtot,baapvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,nbts,bseed,wfib
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                real(kind=4) dimension(npt),depend(npt) :: wei
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: aapvtot
                real(kind=8) intent(out),dimension(nbts,nsepp,nsepv),depend(nbts,nsepp,nsepv) :: baapvtot
            end subroutine rppi_Ab_wg

            subroutine rppi_C(nt,npt,ra,dec,dc,x,y,z,npt1,dc1,x1,y1,z1,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,cntid,logf,sk1,ll1,cdpvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: cdpvtot
            end subroutine rppi_C
           
            subroutine rppi_C_wg(nt,npt,ra,dec,dc,wei,x,y,z,npt1,dc1,wei1,x1,y1,z1,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,wfib,cntid,logf,sk1,ll1,cdpvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,wfib
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: cdpvtot
            end subroutine rppi_C_wg

            subroutine rppi_Cb(nt,npt,ra,dec,dc,x,y,z,npt1,dc1,x1,y1,z1,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,nbts,bseed,cntid,logf,sk1,ll1,cdpv,cdpvtot,bcdpvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: cdpv
                real(kind=8) intent(out),dimension(nbts,nsepp,nsepv),depend(nbts,nsepp,nsepv) :: bcdpv
                real(kind=8)  intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: cdpvtot
                real(kind=8) intent(out),dimension(nbts,nsepp,nsepv),depend(nbts,nsepp,nsepv) :: bcdpvtot
            end subroutine rppi_Cb

            subroutine rppi_Cb_wg(nt,npt,ra,dec,dc,wei,x,y,z,npt1,dc1,wei1,x1,y1,z1,nsepp,sepp,nsepv,sepv,sbound,mxh1,mxh2,mxh3,nbts,bseed,wfib,cntid,logf,sk1,ll1,cdpvtot,bcdpvtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,nbts,bseed,wfib
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                integer :: nsepp,nsepv
                real(kind=8) dimension(nsepp + 1),depend(nsepp) :: sepp
                real(kind=8) dimension(nsepv + 1),depend(nsepv) :: sepv
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsepv,nsepp),depend(nsepv,nsepp) :: cdpvtot
                real(kind=8) intent(out),dimension(nbts,nsepp,nsepv),depend(nbts,nsepp,nsepv) :: bcdpvtot
            end subroutine rppi_Cb_wg

!==========================================================================================
!   COUNTING ROUTINES - 3D SPHERICAL (redshift-space)
!==========================================================================================

            subroutine s_A(nt,npt,dec,dc,x,y,z,nseps,seps,sbound,mxh1,mxh2,mxh3,cntid,logf,sk,ll,aas) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: aas
            end subroutine s_A

            subroutine s_A_wg(nt,npt,dec,dc,wei,x,y,z,nseps,seps,sbound,mxh1,mxh2,mxh3,wfib,cntid,logf,sk,ll,aas) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,wfib
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                real(kind=4) dimension(npt),depend(npt) :: wei
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: aas
            end subroutine s_A_wg

            subroutine s_Ab(nt,npt,dec,dc,x,y,z,nseps,seps,sbound,mxh1,mxh2,mxh3,nbts,bseed,cntid,logf,sk,ll,aas,baas) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: aas
                real(kind=8) intent(out),dimension(nbts,nseps),depend(nbts,nseps) :: baas
            end subroutine s_Ab

            subroutine s_Ab_wg(nt,npt,dec,dc,wei,x,y,z,nseps,seps,sbound,mxh1,mxh2,mxh3,nbts,bseed,wfib,cntid,logf,sk,ll,aas,baas) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,mxh1,mxh2,mxh3,wfib,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z,dc
                real(kind=4) dimension(npt),depend(npt) :: wei
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2 :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: aas
                real(kind=8) intent(out),dimension(nbts,nseps),depend(nbts,nseps) :: baas
            end subroutine s_Ab_wg

            subroutine s_C(nt,npt,ra,dec,dc,x,y,z,npt1,dc1,x1,y1,z1,nseps,seps,sbound,mxh1,mxh2,mxh3,cntid,logf,sk1,ll1,cds) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: cds
            end subroutine s_C

            subroutine s_C_wg(nt,npt,ra,dec,dc,wei,x,y,z,npt1,dc1,wei1,x1,y1,z1,nseps,seps,sbound,mxh1,mxh2,mxh3,wfib,cntid,logf,sk1,ll1,cds) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,wfib
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: cds
            end subroutine s_C_wg

            subroutine s_Cb(nt,npt,ra,dec,dc,x,y,z,npt1,dc1,x1,y1,z1,nseps,seps,sbound,mxh1,mxh2,mxh3,nbts,bseed,cntid,logf,sk1,ll1,cds,bcds) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: cds
                real(kind=8) intent(out),dimension(nbts,nseps),depend(nbts,nseps) :: bcds
            end subroutine s_Cb

            subroutine s_Cb_wg(nt,npt,ra,dec,dc,wei,x,y,z,npt1,dc1,wei1,x1,y1,z1,nseps,seps,sbound,mxh1,mxh2,mxh3,nbts,bseed,wfib,cntid,logf,sk1,ll1,cds,bcds) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,mxh3,wfib,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z,dc
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1,dc1
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                integer :: nseps
                real(kind=8) dimension(nseps + 1),depend(nseps) :: seps
                real(kind=8) dimension(6) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh3,mxh2,mxh1),depend(mxh3,mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nseps),depend(nseps) :: cds
                real(kind=8) intent(out),dimension(nbts,nseps),depend(nbts,nseps) :: bcds
            end subroutine s_Cb_wg

            
!==========================================================================================
!   COUNTING ROUTINES - 2D SPHERICAL
!==========================================================================================

            subroutine skll2d(mxh1,mxh2,npt,ra,dec,sbound,sk,ll) ! in :cflibfor:cflibfor.f90:mod
                integer :: mxh1,mxh2,npt
                real(kind=8) dimension(npt),depend(npt) :: ra,dec
                real(kind=8) :: sbound(4)
                integer intent(out),dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk
                integer intent(out),dimension(npt),depend(npt) :: ll
            end subroutine skll2d

            subroutine th_A(nt,npt,dec,x,y,z,nsep,sep,sbound,mxh1,mxh2,cntid,logf,sk,ll,aatot) ! in :cflibfor:cflibfor.f90:mod
                integer :: npt,nt,nsep,mxh1,mxh2
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) :: sbound(4)
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: aatot                
            end subroutine th_A

            subroutine th_A_wg(nt,npt,dec,wei,x,y,z,nsep,sep,sbound,mxh1,mxh2,wfib,cntid,logf,sk,ll,aa) ! in :cflibfor:cflibfor.f90:mod
                integer :: npt,nt,nsep,mxh1,mxh2,wfib
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) :: sbound(4)
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: aa
            end subroutine th_A_wg

            subroutine th_Ab(nt,npt,dec,x,y,z,nsep,sep,sbound,mxh1,mxh2,nbts,bseed,cntid,logf,sk,ll,aatot,baatot) ! in :cflibfor:cflibfor.f90:mod
                integer :: npt,nt,nsep,mxh1,mxh2,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) :: sbound(4)
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: aatot
                real(kind=8) intent(out),dimension(nbts,nsep),depend(nbts,nsep) :: baatot                
            end subroutine th_Ab

            subroutine th_Ab_wg(nt,npt,dec,wei,x,y,z,nsep,sep,sbound,mxh1,mxh2,nbts,bseed,wfib,cntid,logf,sk,ll,aa,baa) ! in :cflibfor:cflibfor.f90:mod
                integer :: npt,nt,nsep,mxh1,mxh2,nbts,bseed,wfib
                real(kind=8) dimension(npt),depend(npt) :: dec,x,y,z
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) :: sbound(4)
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk
                integer dimension(npt),depend(npt) :: ll
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: aa
                real(kind=8) intent(out),dimension(nbts,nsep),depend(nbts,nsep) :: baa
            end subroutine th_Ab_wg

            subroutine th_C(nt,npt,ra,dec,x,y,z,npt1,x1,y1,z1,nsep,sep,sbound,mxh1,mxh2,cntid,logf,sk1,ll1,cdthtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,nsep
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) dimension(4) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: cdthtot
            end subroutine th_C

            subroutine th_C_wg(nt,npt,ra,dec,wei,x,y,z,npt1,wei,x1,y1,z1,nsep,sep,sbound,mxh1,mxh2,wfib,cntid,logf,sk1,ll1,cdth) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,nsep,wfib
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) dimension(4) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: cdth
            end subroutine th_C_wg

            subroutine th_Cb(nt,npt,ra,dec,x,y,z,npt1,x1,y1,z1,nsep,sep,sbound,mxh1,mxh2,nbts,bseed,cntid,logf,sk1,ll1,cdthtot,bcdthtot) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,nsep,nbts,bseed
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) dimension(4) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: cdthtot
                real(kind=8) intent(out),dimension(nbts,nsep),depend(nbts,nsep) :: bcdthtot
            end subroutine th_Cb

            subroutine th_Cb_wg(nt,npt,ra,dec,wei,x,y,z,npt1,wei1,x1,y1,z1,nsep,sep,sbound,mxh1,mxh2,nbts,bseed,wfib,cntid,logf,sk1,ll1,cdth,bcdth) ! in :cflibfor:cflibfor.f90:mod
                integer :: nt,npt,npt1,mxh1,mxh2,nsep,nbts,bseed,wfib
                real(kind=8) dimension(npt),depend(npt) :: ra,dec,x,y,z
                real(kind=4) dimension(npt),depend(npt) :: wei
                real(kind=4) dimension(npt1),depend(npt1) :: wei1
                real(kind=8) dimension(npt1),depend(npt1) :: x1,y1,z1
                real(kind=8) dimension(nsep + 1),depend(nsep) :: sep
                real(kind=8) dimension(4) :: sbound
                character*2  :: cntid
                character*80 :: logf
                integer dimension(mxh2,mxh1),depend(mxh2,mxh1) :: sk1
                integer dimension(npt1),depend(npt1) :: ll1
                real(kind=8) intent(out),dimension(nsep),depend(nsep) :: cdth
                real(kind=8) intent(out),dimension(nbts,nsep),depend(nbts,nsep) :: bcdth
            end subroutine th_Cb_wg

            subroutine r_nada(a,b,c,d) ! in :cflibfor:cflibfor.f90:mod
                integer :: a,b,c
                real(kind=8) intent(out),dimension(b,a) :: d
            end subroutine r_nada
            
        end module    
    end interface 
end python module cflibfor

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
