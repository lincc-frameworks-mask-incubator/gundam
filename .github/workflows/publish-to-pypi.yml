# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://github.com/pypa/gh-action-pypi-publish#trusted-publishing

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and publish wheels

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            cibw_build: cp39-macosx_x86_64
          - os: macos-14
            cibw_build: cp39-macosx_arm64
          - os: ubuntu-20.04
            cibw_build: cp39-manylinux_x86_64
          - os: ubuntu-20.04
            cibw_build: cp39-manylinux_aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      if: ${{ runner.os == 'Linux' }}
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: gcc
        version: 11

    - name: Set MACOSX_DEPLOYMENT_TARGET to the current macOS version
      if: ${{ runner.os == 'macOS' }}
      run: |
        export MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | awk -F '.' '{print $1"."0}')
        echo "MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET}" >> $GITHUB_ENV

    - name: Set CIBW envs for Linux and MacOS
      run: |
        echo "CIBW_BUILD=${{ matrix.cibw_build }}" >> $GITHUB_ENV
        CIBW_ARCHS=$(echo ${{ matrix.cibw_build }} | cut -d'_' -f2,3)
        echo "CIBW_ARCHS=${CIBW_ARCHS}" >> $GITHUB_ENV

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.18.1
    - uses: actions/upload-artifact@v4
      with:
        name: artifact_${{ matrix.cibw_build }}
        path: wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build SDist
      run: pipx run build --sdist
    - uses: actions/upload-artifact@v4
      with:
        name: artifact_sdist
        path: dist/*.tar.gz

  publish:
    needs: [ build_wheels, make_sdist ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: artifact_*
        merge-multiple: true
        path: dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1